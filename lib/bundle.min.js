!(function() {
  function e(r, t, n) {
    function o(s, u) {
      if (!t[s]) {
        if (!r[s]) {
          var a = 'function' == typeof require && require;
          if (!u && a) return a(s, !0);
          if (i) return i(s, !0);
          var c = new Error("Cannot find module '" + s + "'");
          throw ((c.code = 'MODULE_NOT_FOUND'), c);
        }
        var f = (t[s] = { exports: {} });
        r[s][0].call(
          f.exports,
          function(e) {
            return o(r[s][1][e] || e);
          },
          f,
          f.exports,
          e,
          r,
          t,
          n,
        );
      }
      return t[s].exports;
    }
    for (var i = 'function' == typeof require && require, s = 0; s < n.length; s++) o(n[s]);
    return o;
  }
  return e;
})()(
  {
    1: [
      function(e, r, t) {
        !(function(n, o) {
          'object' == typeof t && void 0 !== r
            ? o(t, e('@apollo/client/core'), e('graphql/language/printer'))
            : 'function' == typeof define && define.amd
            ? define(['exports', '@apollo/client/core', 'graphql/language/printer'], o)
            : o((n.persistedQueryLink = {}), n._apollo_client_core, n.graphql_language_printer);
        })(this, function(r, t, n) {
          'use strict';
          function o(e) {
            return 'OperationDefinition' === e.kind && 'mutation' === e.operation;
          }
          function i(e) {
            return !e.query.definitions.some(o);
          }
          var s = e('hash.js/lib/hash/sha/256'),
            u = function(e) {
              return s()
                .update(n.print(e))
                .digest('hex');
            },
            a = {
              generateHash: u,
              disable: function(e) {
                var r = e.graphQLErrors,
                  t = e.operation;
                if (
                  r &&
                  r.some(function(e) {
                    return 'PersistedQueryNotSupported' === e.message;
                  })
                )
                  return !0;
                var n = t.getContext().response;
                return !(!n || !n.status || (400 !== n.status && 500 !== n.status));
              },
              useGETForHashedQueries: !1,
            },
            c = Object.prototype.hasOwnProperty,
            f =
              'function' == typeof Symbol
                ? Symbol.for('__createPersistedQueryLink_hashes')
                : '__createPersistedQueryLink_hashes',
            l = 0;
          (r.VERSION = 1),
            (r.defaultGenerateHash = u),
            (r.defaultOptions = a),
            (r.createPersistedQueryLink = function(e) {
              function r(e) {
                if (!e || 'object' != typeof e) return o(e);
                c.call(e, f) || Object.defineProperty(e, f, { value: Object.create(null), enumerable: !1 });
                var r = e[f];
                return c.call(r, h) ? r[h] : (r[h] = o(e));
              }
              void 0 === e && (e = {});
              var n = Object.assign({}, a, e),
                o = n.generateHash,
                s = n.disable,
                u = n.useGETForHashedQueries,
                p = !0,
                h = 'forLink' + l++;
              return new t.ApolloLink(function(e, n) {
                if (!n) throw new Error('PersistedQueryLink cannot be the last link in the chain.');
                var o,
                  a = e.query;
                if (p)
                  try {
                    e.extensions.persistedQuery = { version: 1, sha256Hash: r(a) };
                  } catch (e) {
                    o = e;
                  }
                return new t.Observable(function(r) {
                  if (!o) {
                    var t,
                      a,
                      c = !1,
                      f = !1,
                      l = function(r, o) {
                        var i = r.response,
                          u = r.networkError;
                        if (!c && ((i && i.errors) || u)) {
                          c = !0;
                          var l = { response: i, networkError: u, operation: e, graphQLErrors: i ? i.errors : void 0 };
                          if (
                            ((p = !s(l)),
                            (i &&
                              i.errors &&
                              i.errors.some(function(e) {
                                return 'PersistedQueryNotFound' === e.message;
                              })) ||
                              !p)
                          )
                            return (
                              t && t.unsubscribe(),
                              e.setContext({ http: { includeQuery: !0, includeExtensions: p } }),
                              f && e.setContext({ fetchOptions: a }),
                              void (t = n(e).subscribe(h))
                            );
                        }
                        o();
                      },
                      h = {
                        next: function(e) {
                          l({ response: e }, function() {
                            return r.next(e);
                          });
                        },
                        error: function(e) {
                          l({ networkError: e }, function() {
                            return r.error(e);
                          });
                        },
                        complete: r.complete.bind(r),
                      };
                    return (
                      e.setContext({ http: { includeQuery: !p, includeExtensions: p } }),
                      u &&
                        p &&
                        i(e) &&
                        (e.setContext(function(e) {
                          var r = e.fetchOptions,
                            t = void 0 === r ? {} : r;
                          return (a = t), { fetchOptions: Object.assign({}, t, { method: 'GET' }) };
                        }),
                        (f = !0)),
                      (t = n(e).subscribe(h)),
                      function() {
                        t && t.unsubscribe();
                      }
                    );
                  }
                  r.error(o);
                });
              });
            }),
            Object.defineProperty(r, '__esModule', { value: !0 });
        });
      },
      { '@apollo/client/core': 2, 'graphql/language/printer': 2, 'hash.js/lib/hash/sha/256': 2 },
    ],
    2: [function(e, r, t) {}, {}],
  },
  {},
  [1],
);
